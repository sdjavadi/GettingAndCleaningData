ymax <- max(modul.ground,mine.ground,estr.ground)
plot(mine.ground,type="o", col="red", ylim=c(ymin-0.05,ymax),lwd=2,cex=1.5,main="Conformity to Ground-Truth Communities",ylab="NMI",xlab="Time",pch=16, lty=1)
lines(modul.ground,type="o",col="blue",pch=2,lwd=2,cex=1.5, lty=1)
lines(label.ground,type="o",col="blue",pch=2,lwd=2,cex=1.5, lty=1)
lines(facet.ground,type="o",col="green",pch=4,lwd=2,cex=1.5, lty=1)
lines(estr.ground,type="o",col="brown",pch=5,lwd=2,cex=1.5, lty=1)
ymin <- min(modul.ground,mine.ground,estr.ground)
ymax <- max(modul.ground,mine.ground,estr.ground)
plot(mine.ground,type="o", col="red", ylim=c(ymin-0.05,ymax),lwd=2,cex=1.5,main="Conformity to Ground-Truth Communities",ylab="NMI",xlab="Time",pch=16, lty=1)
lines(modul.ground,type="o",col="blue",pch=2,lwd=2,cex=1.5, lty=1)
lines(label.ground,type="o",col="pink",pch=2,lwd=2,cex=1.5, lty=1)
lines(facet.ground,type="o",col="green",pch=4,lwd=2,cex=1.5, lty=1)
lines(estr.ground,type="o",col="brown",pch=5,lwd=2,cex=1.5, lty=1)
mean(label.ground)
mean(mine.ground)
mean(facet.ground)
mean(modul.ground)
plot(mine.ground,type="o", col="red", ylim=c(0.6-0.05,ymax),lwd=2,cex=1.5,main="Conformity to Ground-Truth Communities",ylab="NMI",xlab="Time",pch=16, lty=1)
lines(modul.ground,type="o",col="blue",pch=2,lwd=2,cex=1.5, lty=1)
lines(label.ground,type="o",col="pink",pch=2,lwd=2,cex=1.5, lty=1)
lines(facet.ground,type="o",col="green",pch=4,lwd=2,cex=1.5, lty=1)
lines(estr.ground,type="o",col="brown",pch=5,lwd=2,cex=1.5, lty=1)
legend("bottom", legend=c("Our Method","FUA","FacetNet","Estrangement"),col=c("red","blue","Green","brown"), horiz=T,lwd=3,x.intersp=0.3, xjust=0.9,xpd = TRUE,yjust=0, pch=c(16,2,4,5),cex=0.8,bty="n")
plot(mine.ground,type="o", col="red", ylim=c(0.7-0.05,ymax),lwd=2,cex=1.5,main="Conformity to Ground-Truth Communities",ylab="NMI",xlab="Time",pch=16, lty=1)
lines(modul.ground,type="o",col="blue",pch=2,lwd=2,cex=1.5, lty=1)
lines(label.ground,type="o",col="pink",pch=2,lwd=2,cex=1.5, lty=1)
lines(facet.ground,type="o",col="green",pch=4,lwd=2,cex=1.5, lty=1)
lines(estr.ground,type="o",col="brown",pch=5,lwd=2,cex=1.5, lty=1)
legend("bottom", legend=c("Our Method","FUA","FacetNet","Estrangement"),col=c("red","blue","Green","brown"), horiz=T,lwd=3,x.intersp=0.3, xjust=0.9,xpd = TRUE,yjust=0, pch=c(16,2,4,5),cex=0.8,bty="n")
sapply(X=V(not.isolated)$ground,FUN=modularity)
sapply(X=function(x){V(x)$ground},FUN=modularity)
sapply(FUN=function(x){modularity(x,V(x)$ground},X=not.isolated)
sapply(FUN=function(x){modularity(x,V(x)$ground)},X=not.isolated)
mean(sapply(FUN=function(x){modularity(x,V(x)$ground)},)X=not.isolated)
mean(sapply(FUN=function(x){modularity(x,V(x)$ground)},X=not.isolated))
mean(sapply(FUN=function(x){modularity(x,V(x)$part)},X=not.isolated))
mean(sapply(FUN=function(x){modularity(x,V(x)$multi)},X=not.isolated))
for(t in  1:length(bench))
{
bench.ground <- paste("DS/KIT/Label/syn_LabelRankT_",t,"_D0_W1_S1_POWER1_THR0.1_I4_MTHR0.7_RST200.icpm",sep = "")
con  <- file(bench.ground, open = "r")
dataList <- list()
ecdfList <- list()
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- list(as.numeric(myVector[[1]]))
dataList <- c(dataList,myVector)
}
close(con)
for(i in seq.int(length(dataList)))
{
V(not.isolated[[t]])$labelT[V(not.isolated[[t]])$label %in% dataList[[i]]] <- i
}
}
similar <- NULL
leaders.persistence <- NULL
followers.persistence <- NULL
mine.hist.cost <- NULL
multi.hist.cost <- NULL
info.hist.cost <- NULL
fast.hist.cost <- NULL
facet.hist.cost <- NULL
estr.hist.cost <- NULL
labelT.hist.cost <- NULL
dynamic.modul <- NULL
dynamic.modul2 <- NULL
common.nodes <- vector("list",length(not.isolated)-1)
for(k in 2:length(not.isolated))
{
common.nodes[[k-1]] <- V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$label %in% V(not.isolated[[k]])$label]$label
V(not.isolated[[k-1]])$mine.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$mine.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$part
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$mine.hist!=0])
mine.hist.cost[k-1] <- compare.communities(V(test)$part,V(test)$mine.hist,method = "nmi")
#dynamic.modul[k] <- 0.5*mine.hist.cost[k-1] + 0.5*mine.modularity[k]
V(not.isolated[[k-1]])$multi.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$multi.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$multi
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$multi.hist!=0])
multi.hist.cost[k-1] <- compare.communities(V(test)$multi,V(test)$multi.hist,"nmi")
#dynamic.modul2[k] <- 0.5*multi.hist.cost[k-1] + 0.5*multi.modularity[k]
V(not.isolated[[k-1]])$info.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$info.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$info
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$info.hist!=0])
info.hist.cost[k-1] <- compare.communities(V(test)$info,V(test)$info.hist,"nmi")
#dynamic.modul2[k] <- 0.5*info.hist.cost[k-1] + 0.5*multi.modularity[k]
V(not.isolated[[k-1]])$fast.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$fast.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$fast
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$fast.hist!=0])
fast.hist.cost[k-1] <- compare.communities(V(test)$fast,V(test)$fast.hist,"nmi")
#dynamic.modul2[k] <- 0.5*fast.hist.cost[k-1] + 0.5*multi.modularity[k]
if(!is.null(V(not.isolated[[1]])$estr))
{
V(not.isolated[[k-1]])$estr.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$estr.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$estr
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$estr.hist!=0])
estr.hist.cost[k-1] <- compare.communities(V(test)$estr,V(test)$estr.hist,"nmi")
}
if(!is.null(V(not.isolated[[1]])$facet))
{
V(not.isolated[[k-1]])$facet.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$facet.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$facet
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$facet.hist!=0])
facet.hist.cost[k-1] <- compare.communities(V(test)$facet,V(test)$facet.hist,method = "nmi")
}
if(!is.null(V(not.isolated[[1]])$labelT))
{
V(not.isolated[[k-1]])$facet.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$facet.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$labelT
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$labelT.hist!=0])
labelT.hist.cost[k-1] <- compare.communities(V(test)$labelT,V(test)$labelT.hist,method = "nmi")
}
common.nodes[[k-1]] <- V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$label %in% V(not.isolated[[k]])$label]$label
similar[k-1] <- length(common.nodes[[k-1]])/vcount(not.isolated[[k-1]])
temp.leaders <- V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$after != 0]$label
leaders.persistence[k-1] <- sum(temp.leaders %in% V(not.isolated[[k]])$label)/length(temp.leaders)
temp.followers <- V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$after == 0]$label
followers.persistence[k-1] <- sum(temp.followers %in% V(not.isolated[[k]])$label)/length(temp.followers)
}
ymin <- min(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost)
ymax <- max(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost)
plot(mine.hist.cost,type="o",col="red",lwd=2,cex=1.5,pch=16,ylim=c(ymin-0.1,ymax),main="Smoothness of Communities Over Time",ylab="Smoothness",xlab="Time")
lines(multi.hist.cost,type="o",col="blue",lwd=2,cex=1.5,pch=2, lty=1)
#lines(info.hist.cost, type="o", pch=22, lty=2, col="gr,een")
lines(labelT.hist.cost, type="o", pch=15,lwd=2,cex=1.5, col="pink")
lines(facet.hist.cost,type="o",pch=4,lwd=2,cex=1.5,col="green",)
lines(estr.hist.cost,type="o",pch=5,lwd=2,cex=1.5,col="brown")
#axis(1,at=1:length(not.isolated),labels=seq(1,length(not.isolated),1))
legend("bottom", legend=c("Our Method","FUA","FacetNet","Estrangement"),col=c("red","blue","Green","brown"), horiz=T,lwd=3,x.intersp=0.3, xjust=0.9,xpd = TRUE,yjust=0, pch=c(16,2,4,5),cex=0.8,bty="n")
ymin <- min(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,labelT)
ymax <- max(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,LabelT)
plot(mine.hist.cost,type="o",col="red",lwd=2,cex=1.5,pch=16,ylim=c(ymin-0.1,ymax),main="Smoothness of Communities Over Time",ylab="Smoothness",xlab="Time")
lines(multi.hist.cost,type="o",col="blue",lwd=2,cex=1.5,pch=2, lty=1)
#lines(info.hist.cost, type="o", pch=22, lty=2, col="gr,een")
lines(labelT.hist.cost, type="o", pch=15,lwd=2,cex=1.5, col="pink")
lines(facet.hist.cost,type="o",pch=4,lwd=2,cex=1.5,col="green",)
lines(estr.hist.cost,type="o",pch=5,lwd=2,cex=1.5,col="brown")
#axis(1,at=1:length(not.isolated),labels=seq(1,length(not.isolated),1))
legend("bottom", legend=c("Our Method","FUA","FacetNet","Estrangement"),col=c("red","blue","Green","brown"), horiz=T,lwd=3,x.intersp=0.3, xjust=0.9,xpd = TRUE,yjust=0, pch=c(16,2,4,5),cex=0.8,bty="n")
labelT.hist.cost
### number of common nodes between two consecutive snapshots####
similar <- NULL
leaders.persistence <- NULL
followers.persistence <- NULL
mine.hist.cost <- NULL
multi.hist.cost <- NULL
info.hist.cost <- NULL
fast.hist.cost <- NULL
facet.hist.cost <- NULL
estr.hist.cost <- NULL
labelT.hist.cost <- NULL
dynamic.modul <- NULL
dynamic.modul2 <- NULL
common.nodes <- vector("list",length(not.isolated)-1)
for(k in 2:length(not.isolated))
{
common.nodes[[k-1]] <- V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$label %in% V(not.isolated[[k]])$label]$label
V(not.isolated[[k-1]])$mine.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$mine.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$part
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$mine.hist!=0])
mine.hist.cost[k-1] <- compare.communities(V(test)$part,V(test)$mine.hist,method = "nmi")
#dynamic.modul[k] <- 0.5*mine.hist.cost[k-1] + 0.5*mine.modularity[k]
V(not.isolated[[k-1]])$multi.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$multi.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$multi
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$multi.hist!=0])
multi.hist.cost[k-1] <- compare.communities(V(test)$multi,V(test)$multi.hist,"nmi")
#dynamic.modul2[k] <- 0.5*multi.hist.cost[k-1] + 0.5*multi.modularity[k]
V(not.isolated[[k-1]])$info.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$info.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$info
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$info.hist!=0])
info.hist.cost[k-1] <- compare.communities(V(test)$info,V(test)$info.hist,"nmi")
#dynamic.modul2[k] <- 0.5*info.hist.cost[k-1] + 0.5*multi.modularity[k]
V(not.isolated[[k-1]])$fast.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$fast.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$fast
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$fast.hist!=0])
fast.hist.cost[k-1] <- compare.communities(V(test)$fast,V(test)$fast.hist,"nmi")
#dynamic.modul2[k] <- 0.5*fast.hist.cost[k-1] + 0.5*multi.modularity[k]
if(!is.null(V(not.isolated[[1]])$estr))
{
V(not.isolated[[k-1]])$estr.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$estr.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$estr
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$estr.hist!=0])
estr.hist.cost[k-1] <- compare.communities(V(test)$estr,V(test)$estr.hist,"nmi")
}
if(!is.null(V(not.isolated[[1]])$facet))
{
V(not.isolated[[k-1]])$facet.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$facet.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$facet
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$facet.hist!=0])
facet.hist.cost[k-1] <- compare.communities(V(test)$facet,V(test)$facet.hist,method = "nmi")
}
if(!is.null(V(not.isolated[[1]])$labelT))
{
V(not.isolated[[k-1]])$labelT.hist <- rep.int(0,vcount(not.isolated[[k-1]]))
V(not.isolated[[k-1]])$labelT.hist[V(not.isolated[[k-1]])$label %in% common.nodes[[k-1]]] <- V(not.isolated[[k]])[V(not.isolated[[k]])$label %in% common.nodes[[k-1]]]$labelT
test <- induced.subgraph(not.isolated[[k-1]],vids = V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$labelT.hist!=0])
labelT.hist.cost[k-1] <- compare.communities(V(test)$labelT,V(test)$labelT.hist,method = "nmi")
}
common.nodes[[k-1]] <- V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$label %in% V(not.isolated[[k]])$label]$label
similar[k-1] <- length(common.nodes[[k-1]])/vcount(not.isolated[[k-1]])
temp.leaders <- V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$after != 0]$label
leaders.persistence[k-1] <- sum(temp.leaders %in% V(not.isolated[[k]])$label)/length(temp.leaders)
temp.followers <- V(not.isolated[[k-1]])[V(not.isolated[[k-1]])$after == 0]$label
followers.persistence[k-1] <- sum(temp.followers %in% V(not.isolated[[k]])$label)/length(temp.followers)
}
ymin <- min(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,labelT)
ymax <- max(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,LabelT)
plot(mine.hist.cost,type="o",col="red",lwd=2,cex=1.5,pch=16,ylim=c(ymin-0.1,ymax),main="Smoothness of Communities Over Time",ylab="Smoothness",xlab="Time")
lines(multi.hist.cost,type="o",col="blue",lwd=2,cex=1.5,pch=2, lty=1)
#lines(info.hist.cost, type="o", pch=22, lty=2, col="gr,een")
lines(labelT.hist.cost, type="o", pch=15,lwd=2,cex=1.5, col="pink")
lines(facet.hist.cost,type="o",pch=4,lwd=2,cex=1.5,col="green",)
lines(estr.hist.cost,type="o",pch=5,lwd=2,cex=1.5,col="brown")
#axis(1,at=1:length(not.isolated),labels=seq(1,length(not.isolated),1))
legend("bottom", legend=c("Our Method","FUA","FacetNet","Estrangement"),col=c("red","blue","Green","brown"), horiz=T,lwd=3,x.intersp=0.3, xjust=0.9,xpd = TRUE,yjust=0, pch=c(16,2,4,5),cex=0.8,bty="n")
ymin <- min(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,labelT)
ymax <- max(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,LabelT)
plot(mine.hist.cost,type="o",col="red",lwd=2,cex=1.5,pch=16,ylim=c(ymin-0.1,ymax),main="Smoothness of Communities Over Time",ylab="Smoothness",xlab="Time")
lines(multi.hist.cost,type="o",col="blue",lwd=2,cex=1.5,pch=2, lty=1)
#lines(info.hist.cost, type="o", pch=22, lty=2, col="gr,een")
lines(labelT.hist.cost, type="o", pch=15,lwd=2,cex=1.5, col="pink")
lines(facet.hist.cost,type="o",pch=4,lwd=2,cex=1.5,col="green",)
lines(estr.hist.cost,type="o",pch=5,lwd=2,cex=1.5,col="brown")
#axis(1,at=1:length(not.isolated),labels=seq(1,length(not.isolated),1))
legend("bottom", legend=c("Our Method","FUA","FacetNet","Estrangement"),col=c("red","blue","Green","brown"), horiz=T,lwd=3,x.intersp=0.3, xjust=0.9,xpd = TRUE,yjust=0, pch=c(16,2,4,5),cex=0.8,bty="n")
ymin <- min(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,labelT.hist.cost)
ymax <- max(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,LabelT.hist.cost)
plot(mine.hist.cost,type="o",col="red",lwd=2,cex=1.5,pch=16,ylim=c(ymin-0.1,ymax),main="Smoothness of Communities Over Time",ylab="Smoothness",xlab="Time")
lines(multi.hist.cost,type="o",col="blue",lwd=2,cex=1.5,pch=2, lty=1)
#lines(info.hist.cost, type="o", pch=22, lty=2, col="gr,een")
lines(labelT.hist.cost, type="o", pch=15,lwd=2,cex=1.5, col="pink")
lines(facet.hist.cost,type="o",pch=4,lwd=2,cex=1.5,col="green",)
lines(estr.hist.cost,type="o",pch=5,lwd=2,cex=1.5,col="brown")
#axis(1,at=1:length(not.isolated),labels=seq(1,length(not.isolated),1))
legend("bottom", legend=c("Our Method","FUA","FacetNet","Estrangement"),col=c("red","blue","Green","brown"), horiz=T,lwd=3,x.intersp=0.3, xjust=0.9,xpd = TRUE,yjust=0, pch=c(16,2,4,5),cex=0.8,bty="n")
ymin <- min(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,labelT.hist.cost)
ymax <- max(mine.hist.cost,multi.hist.cost,info.hist.cost,fast.hist.cost,LabelT.hist.cost)
plot(mine.hist.cost,type="o",col="red",lwd=2,cex=1.5,pch=16,ylim=c(ymin-0.1,ymax),main="Smoothness of Communities Over Time",ylab="Smoothness",xlab="Time")
lines(multi.hist.cost,type="o",col="blue",lwd=2,cex=1.5,pch=2, lty=1)
#lines(info.hist.cost, type="o", pch=22, lty=2, col="gr,een")
lines(labelT.hist.cost, type="o", pch=15,lwd=2,cex=1.5, col="pink")
lines(facet.hist.cost,type="o",pch=4,lwd=2,cex=1.5,col="green",)
lines(estr.hist.cost,type="o",pch=5,lwd=2,cex=1.5,col="brown")
#axis(1,at=1:length(not.isolated),labels=seq(1,length(not.isolated),1))
legend("bottom", legend=c("Our Method","FUA","FacetNet","Estrangement"),col=c("red","blue","Green","brown"), horiz=T,lwd=3,x.intersp=0.3, xjust=0.9,xpd = TRUE,yjust=0, pch=c(16,2,4,5),cex=0.8,bty="n")
ymin <- min(similar,leaders.persistence,followers.persistence)
ymax <- max(similar,leaders.persistence,followers.persistence)
plot(leaders.persistence,type="o", col="red",lwd=2,cex=1.5,pch = 16, ylim=c(ymin-0.05,ymax),main="Persistence of Leaders/Followers Over Time",ylab="Persistence",xlab="Time" )
#lines(, type="o", pch=17, lty=2, col="red")
lines(followers.persistence, type="o", pch=18,lwd=2,cex=1.5, lty=2, col="blue")
#axis(1,at=1:length(not.isolated),labels=seq(1,length(not.isolated),by = 2))
legend("bottom", legend=c("Leaders","Followers"),col=c("red","blue"), horiz=T,lwd=3,x.intersp=0.5, xjust=0,yjust=0, pch=c(16,18),cex=0.8,bty="n")
df <- read.csv("C:/Users/Saeed/Documents/kharid2.csv")
Saeed <- 0
Mohsen <- 0
Jalal <- 0
Afzali <- 0
SSaeed <- 0
SMohsen <- 0
SJalal <- 0
SAfzali <- 0
for(i in 1:length(df[,1]))
{
sumShares <- sum(df[i,3:6])
eachShares <- df[i,"Price"]/sumShares
if(df[i,"Buyer"]=="s")
Saeed <- Saeed + df[i,"Price"]
else if(df[i,"Buyer"]=="m")
Mohsen <- Mohsen + df[i,"Price"]
else if(df[i,"Buyer"]=="j")
Jalal <- Jalal + df[i,"Price"]
else if(df[i,"Buyer"]=="a")
Afzali <- Afzali + df[i,"Price"]
SSaeed <- SSaeed + (df[i,"Saeed"])*eachShares
SMohsen <- SMohsen + (df[i,"Mohsen"])*eachShares
SJalal <- SJalal + (df[i,"Jalal"])*eachShares
SAfzali <- SAfzali + (df[i,"Afzali"])*eachShares
Saeed <- Saeed - (df[i,"Saeed"])*eachShares
Mohsen <- Mohsen - (df[i,"Mohsen"])*eachShares
Jalal <- Jalal - (df[i,"Jalal"])*eachShares
Afzali <- Afzali - (df[i,"Afzali"])*eachShares
}
cat("\n Saeed :",Saeed)
cat("\n Mohsen :",Mohsen)
cat("\n Jalal :",Jalal)
cat("\n Afzali :",Afzali)
cat("\n Cost of Saeed :",SSaeed)
cat("\n Cost of Mohsen :",SMohsen)
cat("\n Cost of Jalal :",SJalal)
cat("\n Cost of Afzali :",SAfzali)
plot(c(SSaeed,SMohsen,SJalal,SAfzali))
Saeed + Mohsen + Jalal + Afzali
df <- read.csv("C:/Users/Saeed/Documents/kharid2.csv")
Saeed <- 0
Mohsen <- 0
Jalal <- 0
Afzali <- 0
SSaeed <- 0
SMohsen <- 0
SJalal <- 0
SAfzali <- 0
for(i in 1:length(df[,1]))
{
sumShares <- sum(df[i,3:6])
eachShares <- df[i,"Price"]/sumShares
if(df[i,"Buyer"]=="s")
Saeed <- Saeed + df[i,"Price"]
else if(df[i,"Buyer"]=="m")
Mohsen <- Mohsen + df[i,"Price"]
else if(df[i,"Buyer"]=="j")
Jalal <- Jalal + df[i,"Price"]
else if(df[i,"Buyer"]=="a")
Afzali <- Afzali + df[i,"Price"]
SSaeed <- SSaeed + (df[i,"Saeed"])*eachShares
SMohsen <- SMohsen + (df[i,"Mohsen"])*eachShares
SJalal <- SJalal + (df[i,"Jalal"])*eachShares
SAfzali <- SAfzali + (df[i,"Afzali"])*eachShares
Saeed <- Saeed - (df[i,"Saeed"])*eachShares
Mohsen <- Mohsen - (df[i,"Mohsen"])*eachShares
Jalal <- Jalal - (df[i,"Jalal"])*eachShares
Afzali <- Afzali - (df[i,"Afzali"])*eachShares
}
cat("\n Saeed :",Saeed)
cat("\n Mohsen :",Mohsen)
cat("\n Jalal :",Jalal)
cat("\n Afzali :",Afzali)
cat("\n Cost of Saeed :",SSaeed)
cat("\n Cost of Mohsen :",SMohsen)
cat("\n Cost of Jalal :",SJalal)
cat("\n Cost of Afzali :",SAfzali)
plot(c(SSaeed,SMohsen,SJalal,SAfzali))
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "ef6a05efa1be1e750900","8edf9afe0e8e4b9b256158f5118f70938a1202fe")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
install.packages("jsonlite")
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req
req
library("jsonlite", lib.loc="~/R/win-library/3.1")
fromJSON(toJSON(req))
fromJSON(toJSON(content))
stop_for_status(req)
test <-content(req)
test
fromJSON(toJSON(test))
fromJSON(toJSON(test))
fromJSON(toJSON(test))
test[,test$git_url="git://github.com/jtleek/datasharing.git")
test[,test$git_url="git://github.com/jtleek/datasharing.git"]
test[,test$git_url=="git://github.com/jtleek/datasharing.git"]
test$git_url
test <- fromJSON(toJSON(test))
test[,test$git_url=="git://github.com/jtleek/datasharing.git"]
test[,test$git_url=="git://github.com/jtleek/datasharing.git"]
test[1,test$git_url=="git://github.com/jtleek/datasharing.git"]
test[test$git_url=="git://github.com/jtleek/datasharing.git",]
test[test$git_url=="git://github.com/jtleek/datasharing.git",]
head(test[test$git_url=="git://github.com/jtleek/datasharing.git",])
str(test[test$git_url=="git://github.com/jtleek/datasharing.git",])
str(test[test$git_url=="git://github.com/jtleek/datasharing.git",])$created_at
test[test$git_url=="git://github.com/jtleek/datasharing.git",]$created_at
df <- read.csv("C:/Users/Saeed/Documents/kharid3(93-8-28).csv")
Saeed <- 0
Mohsen <- 0
Jalal <- 0
Afzali <- 0
SSaeed <- 0
SMohsen <- 0
SJalal <- 0
SAfzali <- 0
for(i in 1:length(df[,1]))
{
sumShares <- sum(df[i,3:6])
eachShares <- df[i,"Price"]/sumShares
if(df[i,"Buyer"]=="s")
Saeed <- Saeed + df[i,"Price"]
else if(df[i,"Buyer"]=="m")
Mohsen <- Mohsen + df[i,"Price"]
else if(df[i,"Buyer"]=="j")
Jalal <- Jalal + df[i,"Price"]
else if(df[i,"Buyer"]=="a")
Afzali <- Afzali + df[i,"Price"]
SSaeed <- SSaeed + (df[i,"Saeed"])*eachShares
SMohsen <- SMohsen + (df[i,"Mohsen"])*eachShares
SJalal <- SJalal + (df[i,"Jalal"])*eachShares
SAfzali <- SAfzali + (df[i,"Afzali"])*eachShares
Saeed <- Saeed - (df[i,"Saeed"])*eachShares
Mohsen <- Mohsen - (df[i,"Mohsen"])*eachShares
Jalal <- Jalal - (df[i,"Jalal"])*eachShares
Afzali <- Afzali - (df[i,"Afzali"])*eachShares
}
cat("\n Saeed :",Saeed)
cat("\n Mohsen :",Mohsen)
cat("\n Jalal :",Jalal)
cat("\n Afzali :",Afzali)
cat("\n Cost of Saeed :",SSaeed)
cat("\n Cost of Mohsen :",SMohsen)
cat("\n Cost of Jalal :",SJalal)
cat("\n Cost of Afzali :",SAfzali)
plot(c(SSaeed,SMohsen,SJalal,SAfzali))
means<-c(1:3,41:43,81:83,121:123,161:163,201,214,227,240,253,266:268,345:347,424:426,503,516,529,542)
stds<-c(4:6,44:46,84:86,124:126,164:166,202,215,228,241,254,269:271,348:350,427:429,504,517,530,543)
to.keep <- c(means,stds)
to.keep <- sort(to.keep)
featNames <- read.table("UCI HAR Dataset/features.txt",header = F,stringsAsFactor=F)
train <- read.table("UCI HAR Dataset/train/X_train.txt")
train <- train[,to.keep]
colnames(train)<-featNames[to.keep,2]
subjTrain <- read.table("UCI HAR Dataset/train/subject_train.txt")
actTrain <- read.table("UCI HAR Dataset/train/y_train.txt")
train2 <- cbind(subjTrain,actTrain,train)
test <- read.table("UCI HAR Dataset/test/X_test.txt")
test <- test[,to.keep]
colnames(test)<-featNames[to.keep,2]
subjTest <- read.table("UCI HAR Dataset/test/subject_test.txt")
actTest <- read.table("UCI HAR Dataset/test/y_test.txt")
test2 <- cbind(subjTest,actTest,test)
merged <- rbind(train2,test2)
actName <- read.table("UCI HAR Dataset/activity_labels.txt",header = F,stringsAsFactor=F)
actName <- actName[,2]
merged[,2] <- factor(merged[,2],labels = actName)
names(merged)[1] <- "Subjects"
names(merged)[2] <- "Activities"
aggdata <-aggregate(merged, by=list(Grouped.Activitiy = merged$Activities, Grouped.Subject = merged$Subjects), FUN=mean)
aggdata[,3] <- NULL
aggdata[,3] <- NULL
aggdata$temp <- aggdata$Grouped.Activitiy
aggdata$Grouped.Activitiy <- aggdata$Grouped.Subject
aggdata$Grouped.Subject <- aggdata$temp
names(aggdata)[c(1,2)] <- c("Grouped.Subject","Grouped.Activitiy")
write.table(aggdata,"Course Project.txt",row.name=FALSE)
getpw()
getpwd()
pwd()
getwd()
setwd(c(getwd(),"C:\Users\Saeed\Getting and Cleaning Data"))
setwd(c(getwd(),"C:/Users/Saeed/Getting and Cleaning Data"))
means<-c(1:3,41:43,81:83,121:123,161:163,201,214,227,240,253,266:268,345:347,424:426,503,516,529,542)
stds<-c(4:6,44:46,84:86,124:126,164:166,202,215,228,241,254,269:271,348:350,427:429,504,517,530,543)
to.keep <- c(means,stds)
to.keep <- sort(to.keep)
featNames <- read.table("UCI HAR Dataset/features.txt",header = F,stringsAsFactor=F)
train <- read.table("UCI HAR Dataset/train/X_train.txt")
train <- train[,to.keep]
colnames(train)<-featNames[to.keep,2]
subjTrain <- read.table("UCI HAR Dataset/train/subject_train.txt")
actTrain <- read.table("UCI HAR Dataset/train/y_train.txt")
train2 <- cbind(subjTrain,actTrain,train)
test <- read.table("UCI HAR Dataset/test/X_test.txt")
test <- test[,to.keep]
colnames(test)<-featNames[to.keep,2]
subjTest <- read.table("UCI HAR Dataset/test/subject_test.txt")
actTest <- read.table("UCI HAR Dataset/test/y_test.txt")
test2 <- cbind(subjTest,actTest,test)
merged <- rbind(train2,test2)
actName <- read.table("UCI HAR Dataset/activity_labels.txt",header = F,stringsAsFactor=F)
actName <- actName[,2]
merged[,2] <- factor(merged[,2],labels = actName)
names(merged)[1] <- "Subjects"
names(merged)[2] <- "Activities"
aggdata <-aggregate(merged, by=list(Grouped.Activitiy = merged$Activities, Grouped.Subject = merged$Subjects), FUN=mean)
aggdata[,3] <- NULL
aggdata[,3] <- NULL
aggdata$temp <- aggdata$Grouped.Activitiy
aggdata$Grouped.Activitiy <- aggdata$Grouped.Subject
aggdata$Grouped.Subject <- aggdata$temp
names(aggdata)[c(1,2)] <- c("Grouped.Subject","Grouped.Activitiy")
write.table(aggdata,"Course Project.txt",row.name=FALSE)
getwd()
setwd("C:/Users/Saeed/Getting and Cleaning Data")
getwd()
means<-c(1:3,41:43,81:83,121:123,161:163,201,214,227,240,253,266:268,345:347,424:426,503,516,529,542)
stds<-c(4:6,44:46,84:86,124:126,164:166,202,215,228,241,254,269:271,348:350,427:429,504,517,530,543)
to.keep <- c(means,stds)
to.keep <- sort(to.keep)
featNames <- read.table("UCI HAR Dataset/features.txt",header = F,stringsAsFactor=F)
train <- read.table("UCI HAR Dataset/train/X_train.txt")
train <- train[,to.keep]
colnames(train)<-featNames[to.keep,2]
subjTrain <- read.table("UCI HAR Dataset/train/subject_train.txt")
actTrain <- read.table("UCI HAR Dataset/train/y_train.txt")
train2 <- cbind(subjTrain,actTrain,train)
test <- read.table("UCI HAR Dataset/test/X_test.txt")
test <- test[,to.keep]
colnames(test)<-featNames[to.keep,2]
subjTest <- read.table("UCI HAR Dataset/test/subject_test.txt")
actTest <- read.table("UCI HAR Dataset/test/y_test.txt")
test2 <- cbind(subjTest,actTest,test)
merged <- rbind(train2,test2)
actName <- read.table("UCI HAR Dataset/activity_labels.txt",header = F,stringsAsFactor=F)
actName <- actName[,2]
merged[,2] <- factor(merged[,2],labels = actName)
names(merged)[1] <- "Subjects"
names(merged)[2] <- "Activities"
aggdata <-aggregate(merged, by=list(Grouped.Activitiy = merged$Activities, Grouped.Subject = merged$Subjects), FUN=mean)
aggdata[,3] <- NULL
aggdata[,3] <- NULL
aggdata$temp <- aggdata$Grouped.Activitiy
aggdata$Grouped.Activitiy <- aggdata$Grouped.Subject
aggdata$Grouped.Subject <- aggdata$temp
names(aggdata)[c(1,2)] <- c("Grouped.Subject","Grouped.Activitiy")
write.table(aggdata,"Course Project.txt",row.name=FALSE)
warnings()
